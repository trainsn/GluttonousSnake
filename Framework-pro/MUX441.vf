////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX441.vf
// /___/   /\     Timestamp : 01/09/2017 15:46:35
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/logic/Framework-pro/ngc -intstyle ise -family kintex7 -verilog E:/logic/Framework-pro/MUX441.vf -w E:/logic/Framework-pro/Code/MUX441.sch
//Design Name: MUX441
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX441(I0, 
              I1, 
              I2, 
              I3, 
              s, 
              o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire NS0;
   wire NS1;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_128;
   wire XLXN_129;
   wire XLXN_131;
   wire XLXN_132;
   wire XLXN_133;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_138;
   wire XLXN_139;
   wire XLXN_142;
   wire XLXN_145;
   wire XLXN_148;
   
   AND2  I00 (.I0(I0[0]), 
             .I1(XLXN_139), 
             .O(XLXN_20));
   AND2  I01 (.I0(I0[1]), 
             .I1(XLXN_139), 
             .O(XLXN_126));
   AND2  I02 (.I0(I0[2]), 
             .I1(XLXN_139), 
             .O(XLXN_131));
   AND2  I03 (.I0(I0[3]), 
             .I1(XLXN_139), 
             .O(XLXN_135));
   AND2  I10 (.I0(I1[0]), 
             .I1(XLXN_142), 
             .O(XLXN_21));
   AND2  I11 (.I0(I1[1]), 
             .I1(XLXN_142), 
             .O(XLXN_127));
   AND2  I12 (.I0(I1[2]), 
             .I1(XLXN_142), 
             .O(XLXN_132));
   AND2  I13 (.I0(I1[3]), 
             .I1(XLXN_142), 
             .O(XLXN_136));
   AND2  I20 (.I0(I2[0]), 
             .I1(XLXN_145), 
             .O(XLXN_22));
   AND2  I21 (.I0(I2[1]), 
             .I1(XLXN_145), 
             .O(XLXN_128));
   AND2  I22 (.I0(I2[2]), 
             .I1(XLXN_145), 
             .O(XLXN_133));
   AND2  I23 (.I0(I2[3]), 
             .I1(XLXN_145), 
             .O(XLXN_137));
   AND2  I30 (.I0(I3[0]), 
             .I1(XLXN_148), 
             .O(XLXN_23));
   AND2  I31 (.I0(I3[1]), 
             .I1(XLXN_148), 
             .O(XLXN_129));
   AND2  I32 (.I0(I3[2]), 
             .I1(XLXN_148), 
             .O(XLXN_134));
   AND2  I33 (.I0(I3[3]), 
             .I1(XLXN_148), 
             .O(XLXN_138));
   AND2  NS1NS0 (.I0(NS0), 
                .I1(NS1), 
                .O(XLXN_139));
   AND2  NS1S0 (.I0(s[0]), 
               .I1(NS1), 
               .O(XLXN_142));
   OR4  O0 (.I0(XLXN_23), 
           .I1(XLXN_22), 
           .I2(XLXN_21), 
           .I3(XLXN_20), 
           .O(o[0]));
   OR4  O1 (.I0(XLXN_129), 
           .I1(XLXN_128), 
           .I2(XLXN_127), 
           .I3(XLXN_126), 
           .O(o[1]));
   OR4  O2 (.I0(XLXN_134), 
           .I1(XLXN_133), 
           .I2(XLXN_132), 
           .I3(XLXN_131), 
           .O(o[2]));
   OR4  O3 (.I0(XLXN_138), 
           .I1(XLXN_137), 
           .I2(XLXN_136), 
           .I3(XLXN_135), 
           .O(o[3]));
   AND2  S1NS0 (.I0(NS0), 
               .I1(s[1]), 
               .O(XLXN_145));
   AND2  S1S0 (.I0(s[0]), 
              .I1(s[1]), 
              .O(XLXN_148));
   INV  XLXI_1 (.I(s[1]), 
               .O(NS1));
   INV  XLXI_2 (.I(s[0]), 
               .O(NS0));
endmodule
